---
title: "eda"
format: html
---

```{r}
#| Echo: False
#| Warning: False
#| 
source("../scripts/helpers.R")
packages <- c(
    "ggplot2", "dplyr", "readr", "janitor", "tidyr"
)
load_and_install_packages(packages)
```

# Data Ingestion

We do data cleaning AFTER reading in a file because a lot of this info can't be saved into a csv without inflating file size.

```{r}
df <- readr::read_csv("../data/poverty_data.csv.gz") %>%
    mutate(married = (mar == 1) + 0) %>%
    add_state_abbreviations() %>%
    add_region() %>%
    filter(education != 0) %>%
    apply_factor_labels()
```

```{r}
df %>%
    ggplot(aes(
        x=region, 
        y=after_stat(count)/sum(after_stat(count)),
        fill=factor(spm_poor == 1)
    )) +
    geom_bar() +
    labs(
        x = "", 
        y = "Proportion", 
        title = "Relative Frequency - Regional Demographics",
        fill = "Poverty\nClassification"
    ) +
    theme_minimal() +
    theme(legend.position = "right")
```

```{r}
df %>%
    ggplot(aes(
        x=education, 
        y=after_stat(count)/sum(after_stat(count)),
        fill=factor(spm_poor == 1),
        
    )) +
    geom_bar() +
    labs(
        x = "", 
        y = "Proportion", 
        title = "Relative Frequency - Education Demographics",
        fill = "Poverty\nClassification"
    ) +
    theme_minimal() +
    theme(legend.position = "right")
```

```{r}
df %>%
    ggplot(aes(
        x=race, 
        y=after_stat(count)/sum(after_stat(count)),
        fill=factor(spm_poor == 1)
    )) +
    geom_bar() +
    labs(
        x = "", 
        y = "Proportion", 
        title = "Relative Frequency - Racial Demographics",
        fill = "Poverty\nClassification"
    ) +
    theme_minimal() +
    theme(legend.position = "right")
```

```{r}
df %>%
    ggplot(aes(
        x=age, 
        #y=after_stat(count)/sum(after_stat(count)),
        color=factor(spm_poor == 1)
    )) +
    # geom_histogram(color="black", bins=75) +
    geom_density() +
    labs(
        x = "Age", 
        y = "Density", 
        title = "Density - Age Demographics",
        color = "Poverty\nClassification",
        caption="Note: Minimum Age = 25"
    ) +
    theme_minimal() +
    theme(legend.position = "right") +
    scale_x_continuous(breaks = seq(0, 100, 10))
```

